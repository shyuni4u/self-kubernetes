{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\shyuniz\\\\Desktop\\\\moreh\\\\self-kubernetes\\\\components\\\\organisms\\\\ClusterModnn.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Panel from '../atoms/Panel';\nimport ModnnConfig from '../../lib/setting.json';\nvar conn = axios.create({\n  baseURL: ModnnConfig.modnn.ip,\n  timeout: 10 * 1000\n});\nexport var ClusterModnn = function ClusterModnn() {\n  _s();\n\n  var _useState = useState(undefined),\n      result = _useState[0],\n      setResult = _useState[1];\n\n  useEffect(function () {\n    var unmount = false;\n\n    var onLoadApi = function onLoadApi() {\n      conn.get('/modnn').then(function (response) {\n        if (unmount) return;\n\n        if (response.status === 200) {\n          console.log(response.data);\n          setResult(response.data);\n        } else {\n          setResult(undefined);\n        }\n      })[\"catch\"](function (error) {\n        if (unmount) return;\n        console.log('error', error);\n      });\n    };\n\n    var interval = setInterval(function () {\n      onLoadApi();\n    }, 1000);\n    return function () {\n      unmount = true;\n      clearInterval(interval);\n    };\n  }, []);\n  return __jsx(Panel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, result && result.map(function (el, elIndex) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, JSON.stringify(el)), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\n_s(ClusterModnn, \"Z/A/9w2TB6edPN8ruHGm8He8oPs=\");\n\n_c = ClusterModnn;\nexport default ClusterModnn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClusterModnn\");","map":{"version":3,"sources":["C:/Users/shyuniz/Desktop/moreh/self-kubernetes/components/organisms/ClusterModnn.tsx"],"names":["React","useEffect","useState","axios","Panel","ModnnConfig","conn","create","baseURL","modnn","ip","timeout","ClusterModnn","undefined","result","setResult","unmount","onLoadApi","get","then","response","status","console","log","data","error","interval","setInterval","clearInterval","map","el","elIndex","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,IAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEH,WAAW,CAACI,KAAZ,CAAkBC,EADH;AAExBC,EAAAA,OAAO,EAAE,KAAK;AAFU,CAAb,CAAb;AAKA,OAAO,IAAMC,YAAsB,GAAG,SAAzBA,YAAyB,GAAM;AAAA;;AAAA,kBACdV,QAAQ,CAAMW,SAAN,CADM;AAAA,MACnCC,MADmC;AAAA,MAC3BC,SAD2B;;AAG1Cd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIe,OAAO,GAAG,KAAd;;AACA,QAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBX,MAAAA,IAAI,CACDY,GADH,CACO,QADP,EAEGC,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClB,YAAIJ,OAAJ,EAAa;;AACb,YAAII,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAT,UAAAA,SAAS,CAACK,QAAQ,CAACI,IAAV,CAAT;AACD,SAHD,MAGO;AACLT,UAAAA,SAAS,CAACF,SAAD,CAAT;AACD;AACF,OAVH,WAWS,UAACY,KAAD,EAAW;AAChB,YAAIT,OAAJ,EAAa;AACbM,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB;AACD,OAdH;AAeD,KAhBD;;AAkBA,QAAMC,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjCV,MAAAA,SAAS;AACV,KAF2B,EAEzB,IAFyB,CAA5B;AAIA,WAAO,YAAM;AACXD,MAAAA,OAAO,GAAG,IAAV;AACAY,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD,KAHD;AAID,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,MAAM,IACLA,MAAM,CAACe,GAAP,CAAW,UAACC,EAAD,EAAKC,OAAL;AAAA,WACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,IAAI,CAACC,SAAL,CAAeH,EAAf,CAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADS;AAAA,GAAX,CAFJ,CADF,CADF;AAaD,CA9CM;;GAAMlB,Y;;KAAAA,Y;AAgDb,eAAeA,YAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nimport Panel from '../atoms/Panel';\r\n\r\nimport ModnnConfig from '../../lib/setting.json';\r\n\r\nconst conn = axios.create({\r\n  baseURL: ModnnConfig.modnn.ip,\r\n  timeout: 10 * 1000\r\n});\r\n\r\nexport const ClusterModnn: React.FC = () => {\r\n  const [result, setResult] = useState<any>(undefined);\r\n\r\n  useEffect(() => {\r\n    let unmount = false;\r\n    const onLoadApi = () => {\r\n      conn\r\n        .get('/modnn')\r\n        .then((response) => {\r\n          if (unmount) return;\r\n          if (response.status === 200) {\r\n            console.log(response.data);\r\n            setResult(response.data);\r\n          } else {\r\n            setResult(undefined);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (unmount) return;\r\n          console.log('error', error);\r\n        });\r\n    };\r\n\r\n    const interval = setInterval(() => {\r\n      onLoadApi();\r\n    }, 1000);\r\n\r\n    return () => {\r\n      unmount = true;\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Panel>\r\n      <ul>\r\n        {result &&\r\n          result.map((el, elIndex) => (\r\n            <li>\r\n              <span>{JSON.stringify(el)}</span>\r\n              <br />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default ClusterModnn;\r\n"]},"metadata":{},"sourceType":"module"}