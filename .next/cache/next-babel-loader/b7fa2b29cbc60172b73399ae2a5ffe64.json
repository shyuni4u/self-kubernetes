{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shyuniz\\\\Desktop\\\\moreh\\\\self-kubernetes\\\\components\\\\organisms\\\\Todo.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport { toast } from 'react-toastify';\nimport Panel from '../atoms/Panel';\nimport Button from '../atoms/Button';\nexport const Todo = ({\n  title = undefined,\n  subtitle = undefined,\n  items = []\n}) => {\n  return __jsx(Panel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, subtitle && __jsx(\"h3\", {\n    className: 'panel-sub-title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }\n  }, subtitle), title && __jsx(\"h2\", {\n    className: 'panel-title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, title), items.length > 0 && __jsx(\"div\", {\n    className: 'panel-content',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, items.map((el, elIdx) => __jsx(Button, {\n    key: elIdx // disabled={el.link === undefined}\n    ,\n    primary: el.link === undefined,\n    onClick: () => {\n      if (el.link === undefined) {\n        toast.error('Not yet', {\n          position: 'top-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: true,\n          progress: undefined\n        });\n      } else {\n        Router.push(`/${el.link}`);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, el.name))));\n};\nexport default Todo;","map":{"version":3,"sources":["C:/Users/shyuniz/Desktop/moreh/self-kubernetes/components/organisms/Todo.tsx"],"names":["React","Router","toast","Panel","Button","Todo","title","undefined","subtitle","items","length","map","el","elIdx","link","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","push","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AA4BA,OAAO,MAAMC,IAAyB,GAAG,CAAC;AACxCC,EAAAA,KAAK,GAAGC,SADgC;AAExCC,EAAAA,QAAQ,GAAGD,SAF6B;AAGxCE,EAAAA,KAAK,GAAG;AAHgC,CAAD,KAInC;AACJ,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,IAAI;AAAI,IAAA,SAAS,EAAE,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,QAAnC,CADf,EAEGF,KAAK,IAAI;AAAI,IAAA,SAAS,EAAE,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,KAA/B,CAFZ,EAGGG,KAAK,CAACC,MAAN,GAAe,CAAf,IACC;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KACT,MAAC,MAAD;AACE,IAAA,GAAG,EAAEA,KADP,CAEE;AAFF;AAGE,IAAA,OAAO,EAAED,EAAE,CAACE,IAAH,KAAYP,SAHvB;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIK,EAAE,CAACE,IAAH,KAAYP,SAAhB,EAA2B;AACzBL,QAAAA,KAAK,CAACa,KAAN,CAAY,SAAZ,EAAuB;AACrBC,UAAAA,QAAQ,EAAE,YADW;AAErBC,UAAAA,SAAS,EAAE,IAFU;AAGrBC,UAAAA,eAAe,EAAE,KAHI;AAIrBC,UAAAA,YAAY,EAAE,IAJO;AAKrBC,UAAAA,YAAY,EAAE,KALO;AAMrBC,UAAAA,SAAS,EAAE,IANU;AAOrBC,UAAAA,QAAQ,EAAEf;AAPW,SAAvB;AASD,OAVD,MAUO;AACLN,QAAAA,MAAM,CAACsB,IAAP,CAAa,IAAGX,EAAE,CAACE,IAAK,EAAxB;AACD;AACF,KAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBGF,EAAE,CAACY,IApBN,CADD,CADH,CAJJ,CADF;AAkCD,CAvCM;AAyCP,eAAenB,IAAf","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Panel from '../atoms/Panel';\r\nimport Button from '../atoms/Button';\r\n\r\nexport type TodoItemProps = {\r\n  /**\r\n   * Item name\r\n   */\r\n  name?: string;\r\n  /**\r\n   * Item link\r\n   */\r\n  link?: string;\r\n};\r\n\r\nexport type TodoProps = {\r\n  /**\r\n   * Title\r\n   */\r\n  title?: string;\r\n  /**\r\n   * Sub title\r\n   */\r\n  subtitle?: string;\r\n  /**\r\n   * Todo array\r\n   */\r\n  items?: TodoItemProps[];\r\n};\r\n\r\nexport const Todo: React.FC<TodoProps> = ({\r\n  title = undefined,\r\n  subtitle = undefined,\r\n  items = []\r\n}) => {\r\n  return (\r\n    <Panel>\r\n      {subtitle && <h3 className={'panel-sub-title'}>{subtitle}</h3>}\r\n      {title && <h2 className={'panel-title'}>{title}</h2>}\r\n      {items.length > 0 && (\r\n        <div className={'panel-content'}>\r\n          {items.map((el, elIdx) => (\r\n            <Button\r\n              key={elIdx}\r\n              // disabled={el.link === undefined}\r\n              primary={el.link === undefined}\r\n              onClick={() => {\r\n                if (el.link === undefined) {\r\n                  toast.error('Not yet', {\r\n                    position: 'top-center',\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                  });\r\n                } else {\r\n                  Router.push(`/${el.link}`);\r\n                }\r\n              }}\r\n            >\r\n              {el.name}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}